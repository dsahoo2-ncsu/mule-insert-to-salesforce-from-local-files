<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd 
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">	<flow name="mule-insert-to-sf-phone-records-from-file" doc:id="8741b9aa-2c73-44db-a899-f684313f007e" >
		<file:listener doc:name="On New or Updated File in PhoneRecords" doc:id="5c504a2b-963a-4347-b968-44156c09a06a" config-ref="File_Config" directory="${fileConnector.phoneRecordsReadFolder}" moveToDirectory="${fileConnector.phoneRecordsMoveToFolder}" overwrite="true">
			<scheduling-strategy >
				<fixed-frequency />
			</scheduling-strategy>
		</file:listener>
		<file:read doc:name="Read File from PhoneRecords" doc:id="79efaabc-37fc-4adf-b387-406c889da58c" config-ref="File_Config" path="${fileConnector.PhoneRecordsReadExcelFile}" outputMimeType="application/xlsx; streaming=true" outputEncoding="UTF-8"/>
		<ee:transform doc:name="Transform Phone records From  excel to json" doc:id="612fa7eb-2d12-4392-a612-43e5ccd60724">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json deferred=true
---
(payload.Sheet1 default [])]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each fifty thousand Phone records" doc:id="12ab9a5f-776c-4cc3-bc93-5fc3af6440f6" batchSize="50000">
			<ee:transform doc:name="Transform Message" doc:id="ee73e2d2-8bc8-4f1e-9170-a276d32ccff9">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java

var filteredPayload = payload map (item) -> 
    (item 
    - "ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c"
    - "ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c"
    ++ 
    "ucinn_ascendv2__Contact__r": {
      "ucinn_ascendv2__External_System_ID__c": item["ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c"]
    }) 
    ++
    "ucinn_ascendv2__Account__r": {
      "ucinn_ascendv2__External_System_ID__c": item["ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c"]
    }
    

var modifiedPayload = filteredPayload map (item) -> 
  ( 
    if (
      (item.ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c == "" or item.ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c == null) 
      and
      (item.ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c == "" or item.ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c == null)
    )
      (item - "ucinn_ascendv2__Contact__r") - "ucinn_ascendv2__Account__r"
    else if (
      (item.ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c == "" or item.ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c == null)
    )
      item - "ucinn_ascendv2__Contact__r"
    else if (
      (item.ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c == "" or item.ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c == null)
    )
      item - "ucinn_ascendv2__Account__r"
    else 
      item
  )
  
---
modifiedPayload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			<ee:transform doc:name="Transform Message" doc:id="87706d92-2e09-4a0c-8f58-a46f1cecf4eb">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java

fun convertedDate(dateTimeString) = 
    dateTimeString as Date { format: "yyyy-MM-dd HH:mm:ss" } as Date { format: "yyyy-MM-dd" }
fun convertDateTime(dateTimeString) =
    dateTimeString as LocalDateTime {format: "yyyy-MM-dd HH:mm:ss"}  >> "UTC"
---
payload map (item) -> (
    item 
    - "ucinn_ascendv2__Start_Date__c" 
    - "ucinn_ascendv2__End_Date__c" 
    - "ucinn_ascendv2__Is_Preferred__c"
    - "NCSU_Historic_Created_Date__c"
    - "NCSU_Modified_Date__c"
    - "LastModifiedDate"
    - "CreatedDate"
    - "ucinn_ascendv2__Is_Preferred_c"
    /* 
    ++ (
        if (item.CreatedDate != "" and item.CreatedDate != null) {
            "CreatedDate": convertDateTime(item.CreatedDate)
        }
        else 
        {}
    )
    ++ (
        if (item.LastModifiedDate != "" and item.LastModifiedDate != null) {
            "LastModifiedDate": convertDateTime(item.LastModifiedDate)
        }
        else 
        {}
    )
    */
    ++ (
        if (item.ucinn_ascendv2__Start_Date__c != "" and item.ucinn_ascendv2__Start_Date__c != null) {
            "ucinn_ascendv2__Start_Date__c": convertedDate(item.ucinn_ascendv2__Start_Date__c) as Date { format: "yyyy-MM-dd" }
        }
        else 
        {}
    )
    ++ (
        if (item.ucinn_ascendv2__End_Date__c != "" and item.ucinn_ascendv2__End_Date__c != null) {
            "ucinn_ascendv2__End_Date__c": convertedDate(item.ucinn_ascendv2__End_Date__c) as Date { format: "yyyy-MM-dd" }
        }
        else 
        {}
    )
    ++ (
        if (item.NCSU_Historic_Created_Date__c != "" and item.NCSU_Historic_Created_Date__c != null) {
            "NCSU_Historic_Created_Date__c": convertedDate(item.NCSU_Historic_Created_Date__c) as Date { format: "yyyy-MM-dd" }
        }
        else 
        {}
    )
    ++ 
    (
        if (item.NCSU_Modified_Date__c != "" and item.NCSU_Modified_Date__c != null) {
            "NCSU_Modified_Date__c": convertedDate(item.NCSU_Modified_Date__c) as Date { format: "yyyy-MM-dd" }
        }
        else 
        {}
    )
    ++ 
    (
        if(item.ucinn_ascendv2__Is_Preferred_c == "True" or item.ucinn_ascendv2__Is_Preferred_c == "TRUE" or item.ucinn_ascendv2__Is_Preferred_c == "true" ){
            "ucinn_ascendv2__Is_Preferred__c": true as Boolean
        } 
        else {
            "ucinn_ascendv2__Is_Preferred__c": false as Boolean
        }
    )
)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			<logger level="INFO" doc:name="Logger" doc:id="db0c510c-2a54-4c0c-b5ab-0803295d67e2" message="Transformation of data is successful" />
			<batch:job jobName="mule-insert-to-sf-from-csvBatch_Job_PhoneRecords" doc:id="47c5c801-b178-40b7-8e41-853a8f5b67d5" blockSize="250" maxConcurrency="5">
			<batch:process-records>
				<batch:step name="Batch_Step_PhoneRecords" doc:id="1135642a-f112-4168-be95-90f10918f0a8">
					<batch:aggregator doc:name="Batch Aggregator_PhoneRecords" doc:id="ce9b040a-60c5-430b-8806-78875e1fec70" size="50">
						<set-variable value='#[payload map (item) -&gt;(&#10;item &#10;- "ucinn_ascendv2__Contact__r" &#10;- "ucinn_ascendv2__Account__r"&#10;)&#10;++ &#10;{&#10;    "ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c":&#10;    item.ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c default "" as String&#10;    }&#10;++ &#10;{&#10;    "ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c":&#10;    item.ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c default ""  as String&#10;    }]' doc:name="Set Variable" doc:id="a1e07c99-ca82-4c76-ace7-e47ce4a39061" variableName="RequestPayload"/>
							<!-- [STUDIO:"Create Phone Records"]<salesforce:create doc:name="Create Phone Records" doc:id="f10f46cb-0cb1-43a6-85b2-a7e734d8f370" config-ref="Salesforce_Config" type="ucinn_ascendv2__Phone__c"/> [STUDIO] -->
							<salesforce:upsert doc:name="Upsert" doc:id="ffa555d8-9915-4f27-bef4-91116dbd97f9" config-ref="Salesforce_Config" objectType="ucinn_ascendv2__Phone__c" externalIdFieldName="ucinn_ascendv2__External_System_ID__c"/>
							<logger level="INFO" doc:name="Logger" doc:id="9b63bb02-e6f4-4722-bd3f-922f9a7237e9" message="Upsert Result is:" />
						<logger level="INFO" doc:name="Logger" doc:id="49c1a1d6-6d56-4718-8163-b7c51c49b000" message="#[payload.successful]" />
						<choice doc:name="Choice_PhoneRecords" doc:id="a4c8f8af-184d-497d-80a8-d14f0e88cf05">
							<when expression="#[payload.successful == true]">
								<logger level="INFO" doc:name="Logger" doc:id="abc05df6-0c02-4943-aa6b-9110660e0846" message="Upsert successful" />
							</when>
							<otherwise>
								<logger level="INFO" doc:name="Logger" doc:id="3f241422-fc69-4ddc-a080-20f2a6802fc6" message="Upsert Failed" />
								<ee:transform doc:name="Remove Statck trace from Phone" doc:id="3db74ce2-1c64-4465-8843-8b49b001535f">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
fun removeStackTrace(exception) =
  (exception default {"stackTrace":null}) - "stackTrace"
---
(payload.items default []) map (item) -> item - "exception"++ 
  "exception": removeStackTrace(item.exception)
]]></ee:set-payload>
				</ee:message>
			</ee:transform>
								<ee:transform doc:name="Trime Unnecessary nodes" doc:id="eb0cf11a-41ac-48ce-88ab-c02d2f48643f">
										<ee:message>
											<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map(item)-> {
	message: item.message default "" as String,
    statusCode: item.statusCode default "" as String,
    exceptionMessage: (item.exception default {localizedMessage:""}).localizedMessage default "" as String,
	successful:item.successful     
}]]></ee:set-payload>
										</ee:message>
									</ee:transform>
									<ee:transform doc:name="Add Original Payload" doc:id="05d018d5-3061-4c1d-87ac-ccc413454659">
										<ee:message>
											<ee:set-payload><![CDATA[%dw 2.0
output application/json

var requestItems = vars.RequestPayload
var responseItems = payload
---
payload map ((item, index) -> responseItems[index] ++ requestItems[index])

]]></ee:set-payload>
										</ee:message>
									</ee:transform>
									<ee:transform doc:name="Create CSV" doc:id="632007e6-071a-44d5-86c8-b0cb558e93b2">
										<ee:message>
											<ee:set-payload><![CDATA[%dw 2.0
output application/csv
var filteredPayload = payload filter (item) -> item.successful == false
---
filteredPayload]]></ee:set-payload>
										</ee:message>
									</ee:transform>
									<file:write doc:name="Write" doc:id="338ad4d7-f2f4-4a94-b0e3-c602f10de806" config-ref="File_Config" path="${fileConnector.PhoneRecordsWriteExcelFile}" mode="APPEND">
								</file:write>
							
</otherwise>
						</choice>
					</batch:aggregator>
				</batch:step>
			</batch:process-records>
			<batch:on-complete>
				<logger level="INFO" doc:name="Logger" doc:id="59384990-8038-40dd-afe7-0acc4ef11218" message="#[payload]" />
					<logger level="INFO" doc:name="Logger" doc:id="60468d22-1ed3-443f-b808-82de13263c1f" message="Batch Job Complete" />
			</batch:on-complete>
		</batch:job>
		</foreach>
		<logger level="INFO" doc:name="Logger" doc:id="9ff88258-2445-4633-abeb-9eda27a66400" message="Flow Complete" />
	</flow>
	</mule>
