<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">
	<flow name="mule-insert-to-address-relation-from-fileFlow" doc:id="4ff62762-7c3b-4764-8478-128fbce0a784" >
		<file:listener doc:name="On New or Updated File in Address Relations" doc:id="b15110f8-1cfc-4a4a-a30f-d444397eb818" config-ref="File_Config" directory="${fileConnector.AddressRelationsReadFolder}" moveToDirectory="${fileConnector.AddressRelationsMoveToFolder}" overwrite="true" >
			<scheduling-strategy >
				<fixed-frequency />
			</scheduling-strategy>
		</file:listener>
		<file:read doc:name="Read File from Address Relations" doc:id="d668b37b-4e36-4e02-b55a-d5b69433392c" config-ref="File_Config" path="${fileConnector.AddressRelationsReadExcelFile}" outputMimeType="application/xlsx; streaming=true" outputEncoding="UTF-8" />
		<ee:transform doc:name="Transform Address Relations From  excel to json" doc:id="bbeb697d-e8a4-4229-a9ab-15d404e57cbc" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json deferred=true
---
(payload.Sheet1 default [])]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each fifty thousand address Relations" doc:id="625e6c31-b461-4e75-90f6-f692e87d9793" batchSize="50000">
			<ee:transform doc:name="Transform Message" doc:id="a3877531-2ffe-47da-a1ce-0b14e78f66f1" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java

var filteredPayload = payload map (item) -> 
    (item 
    - "ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c"
    - "ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c"
    - "ucinn_ascendv2__Address__r.NCSU_External_System_ID__c"
    - "NCSU_Historic_User_Group__c"
    - "NCSU_Historic_Created_By__c"
    )
    ++( 
    "ucinn_ascendv2__Contact__r": {
      "ucinn_ascendv2__External_System_ID__c": item["ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c"]
    }) 
    ++
    (
        "ucinn_ascendv2__Account__r": {
      "ucinn_ascendv2__External_System_ID__c": item["ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c"]
    }
    )
    ++
    (
        "ucinn_ascendv2__Address__r":{
    	"NCSU_External_System_ID__c":item["ucinn_ascendv2__Address__r.NCSU_External_System_ID__c"]
    }
    )

var modifiedContactPayload = filteredPayload map (item) ->if (
      (item.ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c == "" or item.ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c == null)
    )
      item - "ucinn_ascendv2__Contact__r"
    else item

var modifiedAccountPayload = modifiedContactPayload map(item)-> if (
      (item.ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c == "" or item.ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c == null)
    )
      item - "ucinn_ascendv2__Account__r"
    else 
      item
  
var modifiedddressPayload = modifiedAccountPayload map(item)->if(item.ucinn_ascendv2__Address__r.NCSU_External_System_ID__c == "" or item.ucinn_ascendv2__Address__r.NCSU_External_System_ID__c == null)
  	item - "ucinn_ascendv2__Address__r"
  	else item


---
modifiedddressPayload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<ee:transform doc:name="Transform Message" doc:id="fdc141f3-882e-46be-a756-8a6fd7a0d255" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java

fun convertedDate(dateTimeString) = 
    dateTimeString as Date { format: "yyyy-MM-dd HH:mm:ss" } as Date { format: "yyyy-MM-dd" }
fun convertDateTime(dateTimeString) =
    dateTimeString as LocalDateTime {format: "yyyy-MM-dd HH:mm:ss"}  >> "UTC"
---
payload map (item) -> (
    item 
    - "ucinn_ascendv2__Start_Date__c" 
    - "ucinn_ascendv2__End_Date__c" 
    - "ucinn_ascendv2__Is_Preferred__c"
    - "LastModifiedDate"
    - "CreatedDate"
    - "ucinn_ascendv2__Is_Preferred_c"
    - "NCSU_Historic_Created_Date__c"
    - "NCSU_Historic_Modified_Date__c"
/*    
    ++ (
        if (item.CreatedDate != "" and item.CreatedDate != null) {
            "CreatedDate": convertDateTime(item.CreatedDate)
        }
        else 
        {}
    )
    ++ (
        if (item.LastModifiedDate != "" and item.LastModifiedDate != null) {
            "LastModifiedDate": convertDateTime(item.LastModifiedDate)
        }
        else 
        {}
    )
    ++ (
        if (item.NCSU_Historic_Created_Date__c != "" and item.NCSU_Historic_Created_Date__c != null) {
            "NCSU_Historic_Created_Date__c": convertedDate(item.NCSU_Historic_Created_Date__c) as Date { format: "yyyy-MM-dd" }
        }
        else 
        {}
    )
    ++ 
    (
        if (item.NCSU_Historic_Modified_Date__c != "" and item.NCSU_Historic_Modified_Date__c != null) {
            "NCSU_Historic_Modified_Date__c": convertedDate(item.NCSU_Modified_Date__c) as Date { format: "yyyy-MM-dd" }
        }
        else 
        {}
    )
 */
    ++ (
        if (item.ucinn_ascendv2__Start_Date__c != "" and item.ucinn_ascendv2__Start_Date__c != null) {
            "ucinn_ascendv2__Start_Date__c": convertedDate(item.ucinn_ascendv2__Start_Date__c) as Date { format: "yyyy-MM-dd" }
        }
        else 
        {}
    )
    ++ (
        if (item.ucinn_ascendv2__End_Date__c != "" and item.ucinn_ascendv2__End_Date__c != null) {
            "ucinn_ascendv2__End_Date__c": convertedDate(item.ucinn_ascendv2__End_Date__c) as Date { format: "yyyy-MM-dd" }
        }
        else 
        {}
    )
    ++ 
    (
        if(item.ucinn_ascendv2__Is_Preferred_c == "Y" or item.ucinn_ascendv2__Is_Preferred_c == "y" or item.ucinn_ascendv2__Is_Preferred_c == "Yes" ){
            "ucinn_ascendv2__Is_Preferred__c": true as Boolean
        } 
        else {
            "ucinn_ascendv2__Is_Preferred__c": false as Boolean
        }
    )
)]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<logger level="INFO" doc:name="Logger" doc:id="34a19bd5-0493-4d48-a5a8-bce4d2404eef" message="Transformation of data is successful"/>
			<batch:job jobName="mule-insert-to-address-relation-from-fileBatch_Job" doc:id="582adf16-d7cb-4189-8951-b9021ce5ba8b" blockSize="306" maxConcurrency="6">
				<batch:process-records >
					<batch:step name="Batch_Step" doc:id="a78c88fe-05d3-44c1-9592-39ccfd8f4582" >
						<batch:aggregator doc:name="Batch Aggregator Address Relations" doc:id="9ecca964-6e26-4d2a-8662-acf503425421" size="50">
							<set-variable value='#[payload map (item) -&gt;(&#10;item &#10;- "ucinn_ascendv2__Contact__r" &#10;- "ucinn_ascendv2__Account__r"&#10;- "ucinn_ascendv2__Address__r"&#10;)&#10;++ &#10;{&#10;    "ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c":&#10;    item.ucinn_ascendv2__Contact__r.ucinn_ascendv2__External_System_ID__c default "" as String&#10;    }&#10;++ &#10;{&#10;    "ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c":&#10;    item.ucinn_ascendv2__Account__r.ucinn_ascendv2__External_System_ID__c default ""  as String&#10;    }&#10;++&#10;{&#10;    "ucinn_ascendv2__Address__r.NCSU_External_System_ID__c":&#10;    item.ucinn_ascendv2__Address__r.NCSU_External_System_ID__c default ""  as String&#10;    }]' doc:name="Set Variable" doc:id="3d15bd97-2296-44c8-b913-a1f48e84c177" variableName="RequestPayload"/>
							<salesforce:upsert objectType="ucinn_ascendv2__Address_Relation__c" externalIdFieldName="NCSU_External_System_ID__c" doc:name="Upsert" doc:id="3be47d5c-d894-462b-83d4-9d7b0df62e9b" config-ref="Salesforce_Config"/>
							<logger level="INFO" doc:name="Logger" doc:id="ab7385b0-dad6-4742-ba03-dfa880f771db" message="Upsert Result is:"/>
							<logger level="INFO" doc:name="Logger" doc:id="142cd55e-4821-4907-b06e-e58177ddf0f0" message="#[payload.successful]"/>
							<choice doc:name="Choice Address Relations" doc:id="ed176050-1ee0-4d0b-abef-84f771d952a0" >
								<when expression="#[payload.successful == true]">
									<logger level="INFO" doc:name="Logger" doc:id="9ac544b3-aeb2-4940-8f76-5fc546a1fa1d" message="Upsert successful"/>
								</when>
								<otherwise >
									<logger level="INFO" doc:name="Logger" doc:id="86308688-4f96-4af7-bca4-fc13820bbfa9" message="Upsert failed"/>
									<ee:transform doc:name="Remove Stack trace from Address Relations" doc:id="91cd43c3-a5d4-4adb-9464-17f48fa58176" >
										<ee:message >
											<ee:set-payload ><![CDATA[%dw 2.0
output application/json
fun removeStackTrace(exception) =
  (exception default {"stackTrace":null}) - "stackTrace"
---
(payload.items default []) map (item) -> item - "exception"++ 
  "exception": removeStackTrace(item.exception)
]]></ee:set-payload>
										</ee:message>
									</ee:transform>
									<ee:transform doc:name="Trim nodes from address relations" doc:id="c7c4c23f-3b50-409d-97d5-a734c5dd028f" >
										<ee:message >
											<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map(item)-> {
	message: item.message default "" as String,
    statusCode: item.statusCode default "" as String,
    exceptionMessage: (item.exception default {localizedMessage:""}).localizedMessage default "" as String,
	successful:item.successful     
}]]></ee:set-payload>
										</ee:message>
									</ee:transform>
									<ee:transform doc:name="Add Original Payload in Addr relations" doc:id="ba62fde8-eebf-4206-801b-8215ab6d0341" >
										<ee:message >
											<ee:set-payload ><![CDATA[%dw 2.0
output application/json

var requestItems = vars.RequestPayload
var responseItems = payload
---
payload map ((item, index) -> requestItems[index] ++ responseItems[index] )

]]></ee:set-payload>
										</ee:message>
									</ee:transform>
									<ee:transform doc:name="create csv for addr relations" doc:id="ad49e007-8974-49d5-b2ed-d00b123c7b41" >
										<ee:message >
											<ee:set-payload ><![CDATA[%dw 2.0
output application/csv quoteHeader=true, quoteValues=true
var filteredPayload = payload filter (item) -> item.successful == false
---
filteredPayload 
/*{
    "Sheet1": filteredPayload map ((item, index) -> {
        (item mapObject (value, key) -> {
            (key): value
        })
    })
}
*/]]></ee:set-payload>
										</ee:message>
									</ee:transform>
									<file:write doc:name="Write file for addr relations" doc:id="09b55dc0-4f83-4023-ae71-022323535129" config-ref="File_Config" path="${fileConnector.AddressRelationsWriteExcelFile}" mode="APPEND"/>
								</otherwise>
							</choice>
						</batch:aggregator>
					</batch:step>
				</batch:process-records>
			</batch:job>
		</foreach>
	</flow>
</mule>
